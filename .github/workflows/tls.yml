
name: TLS tests

on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        julia-version: ['1.9.3']
        julia-arch: [x64]
        nats-version: ['2.10.1']
        julia-num-threads: ['1', '1,1', '2,1', '4,1']
        os: [ubuntu-latest]
    
    services:
      nats-no-tls:
        image: nats:${{ matrix.nats-version }}

    steps:
      - uses: actions/checkout@v2
      - name: "Start TLS enabled NATS server."
        run: |
          echo $PWD
          name=`docker create -v $(pwd)/test/certs:/certs --network ${{ job.container.network }} --name nats --network-alias nats -p 4222:4222 -e GITHUB_ACTIONS=true -e CI=true nats:${{ matrix.nats-version }} --tls --tlscert /certs/nats.crt --tlskey /certs/nats.key`
          docker container start $name
          sleep 2
          docker logs $name
      - name: "Start reply service"
        run: |
          docker ps
          name=`docker create -v $(pwd)/test/certs:/certs --network ${{ job.container.network }} -e GITHUB_ACTIONS=true -e CI=true --entrypoint nats synadia/nats-box:latest --server nats:4222 --tlsca /certs/nats.crt reply help.please 'OK, I CAN HELP!!!'`
          container_id=`docker container start $name`
          sleep 2
          docker logs $container_id
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - run: |
          julia --project -e 'using Pkg; Pkg.instantiate()'
          JULIA_NUM_THREADS=${{ matrix.julia-num-threads }} NATS_CA_CERT_PATH=test/certs/nats.crt NATS_CLIENT_CERT_PATH=test/certs/client.crt tls_client_key_path=test/certs/client.key julia --color=yes --code-coverage=user --project test/runtests.jl
      - uses: julia-actions/julia-processcoverage@v1
        #   annotate: true
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - run: |
          julia --project -e 'using Pkg; Pkg.instantiate()'
          JULIA_NUM_THREADS=${{ matrix.julia-num-threads }} NATS_CA_CERT_PATH=test/certs/nats.crt NATS_CLIENT_CERT_PATH=test/certs/client.crt tls_client_key_path=test/certs/client.key julia --color=yes --code-coverage=user --project test/benchmarks.jl
      - run: |
          julia --project -e 'using Pkg; Pkg.instantiate()'
          JULIA_NUM_THREADS=${{ matrix.julia-num-threads }} NATS_CA_CERT_PATH=test/certs/nats.crt NATS_CLIENT_CERT_PATH=test/certs/client.crt tls_client_key_path=test/certs/client.key julia --color=yes --code-coverage=user --project test/chaos.jl
      - name: "Stop services"
        run: |
          docker kill $(docker ps -q )